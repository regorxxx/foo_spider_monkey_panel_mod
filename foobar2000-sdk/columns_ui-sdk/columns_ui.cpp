#include "ui_extension.h"

namespace cui {

#ifdef _WIN64

namespace fcl {

const GUID dataset::class_guid = {0xa632eb2d, 0xd7a7, 0x4335, {0x90, 0x3b, 0xb4, 0x17, 0x17, 0x1b, 0xec, 0x63}};

const GUID dataset_v2::class_guid = {0x3c684250, 0x085a, 0x4e2d, {0xb2, 0x8e, 0xd7, 0xcb, 0x16, 0x57, 0xa8, 0xdc}};

const GUID group::class_guid = {0xdf670755, 0x3cac, 0x4d3a, {0x88, 0x12, 0xea, 0x78, 0x17, 0x0c, 0xde, 0xa4}};

} // namespace fcl

const GUID control::class_guid = {0x8e0548d4, 0xf801, 0x440c, {0x81, 0xb1, 0xc2, 0x74, 0x30, 0x73, 0x08, 0x4a}};

#else

namespace fcl {

const GUID dataset::class_guid = {0x4fc2444, 0x4591, 0x4f33, {0xae, 0x93, 0xd6, 0x1d, 0xf3, 0xdc, 0x32, 0xad}};

const GUID dataset_v2::class_guid = {0xdbbad230, 0x628e, 0x4d0f, {0x91, 0x29, 0xda, 0xed, 0x7, 0x2b, 0xd3, 0x9a}};

const GUID group::class_guid = {0x78deea88, 0xa3cb, 0x47c7, {0x95, 0xde, 0x39, 0xd6, 0xc8, 0x15, 0x9, 0xe9}};

} // namespace fcl

const GUID control::class_guid = {0x28992df0, 0x1ee2, 0x4e06, {0xac, 0x86, 0xbf, 0x4f, 0x26, 0x6e, 0x2e, 0x56}};

#endif

void cui::fcl::dataset::get_data_to_array(pfc::array_t<uint8_t>& p_data, t_uint32 type, t_export_feedback& feedback,
    abort_callback& p_abort, bool b_reset) const
{
    stream_writer_memblock_ref writer(p_data, b_reset);
    get_data(&writer, type, feedback, p_abort);
}

void cui::fcl::dataset::set_data_from_ptr(
    const void* p_data, t_size size, t_uint32 type, t_import_feedback& feedback, abort_callback& p_abort)
{
    stream_reader_memblock_ref reader(p_data, size);
    return set_data(&reader, size, type, feedback, p_abort);
}

} // namespace cui
